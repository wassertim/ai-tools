name: Build and Push Docker Image

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - patch
          - minor
          - major
      use_package_version:
        description: 'Use current package.json version'
        required: false
        default: true
        type: boolean
      latest:
        description: 'Tag as latest'
        required: false
        default: true
        type: boolean

jobs:
  docker:
    # Run on merged PRs to main or manual workflow dispatch
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Bump version if requested
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version_bump != 'none'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "Bump version to $(jq -r .version package.json)"
          git push

      - name: Extract version from package.json
        id: package_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: v$VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/mcp-tools-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.package_version.outputs.version }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.use_package_version == 'true' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.latest == 'true' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version_bump != 'none'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.package_version.outputs.version }} \
            --title "Release ${{ steps.package_version.outputs.version }}" \
            --notes "## Docker Image
          \`\`\`bash
          docker pull ${{ secrets.DOCKER_USERNAME }}/mcp-tools-server:${{ steps.package_version.outputs.version }}
          \`\`\`

          ## What's Changed
          Auto-generated release for version ${{ steps.package_version.outputs.version }}"